Roundtrip test failed

AST 1:

Module (SrcLoc "" -1 -1) (ModuleName "Main") [LanguagePragma (SrcLoc "" -1 -1) [Ident "TemplateHaskell",Ident "RankNTypes"],OptionsPragma (SrcLoc "" -1 -1) (Just GHC) "-F -pgmFtrhsx "] Nothing (Just [EVar (UnQual (Ident "main"))]) [ImportDecl {importLoc = SrcLoc "" -1 -1, importModule = ModuleName "Language.Haskell.TH", importQualified = False, importSrc = False, importPkg = Nothing, importAs = Nothing, importSpecs = Nothing}] [DataDecl (SrcLoc "" -1 -1) DataType [] (Ident "PageFunction") [UnkindedVar (Ident "m"),UnkindedVar (Ident "a")] [QualConDecl (SrcLoc "" -1 -1) [] [] (ConDecl (Ident "PF") [])] [],PatBind (SrcLoc "" -1 -1) (PVar (Ident "main")) (UnGuardedRhs (Let (BDecls [PatBind (SrcLoc "" -1 -1) (PVar (Ident "a")) (UnGuardedRhs (App (Var (UnQual (Ident "mkName"))) (Lit (String "a")))) (BDecls [])]) (InfixApp (App (Var (UnQual (Ident "runQ"))) (BracketExp (TypeBracket (TyForall (Just [UnkindedVar (Ident "m")]) [] (TyApp (TyApp (TyCon (UnQual (Ident "PageFunction"))) (TyVar (Ident "m"))) (TySplice (ParenSplice (App (Var (UnQual (Ident "conT"))) (Paren (App (Var (UnQual (Ident "mkName"))) (Lit (String "a")))))))))))) (QVarOp (UnQual (Symbol ">>="))) (Var (UnQual (Ident "print")))))) (BDecls [])]

AST 2:

Module (SrcLoc "" -1 -1) (ModuleName "Main") [LanguagePragma (SrcLoc "" -1 -1) [Ident "TemplateHaskell",Ident "RankNTypes"],OptionsPragma (SrcLoc "" -1 -1) (Just GHC) "-F -pgmFtrhsx  "] Nothing (Just [EVar (UnQual (Ident "main"))]) [ImportDecl {importLoc = SrcLoc "" -1 -1, importModule = ModuleName "Language.Haskell.TH", importQualified = False, importSrc = False, importPkg = Nothing, importAs = Nothing, importSpecs = Nothing}] [DataDecl (SrcLoc "" -1 -1) DataType [] (Ident "PageFunction") [UnkindedVar (Ident "m"),UnkindedVar (Ident "a")] [QualConDecl (SrcLoc "" -1 -1) [] [] (ConDecl (Ident "PF") [])] [],PatBind (SrcLoc "" -1 -1) (PVar (Ident "main")) (UnGuardedRhs (Let (BDecls [PatBind (SrcLoc "" -1 -1) (PVar (Ident "a")) (UnGuardedRhs (App (Var (UnQual (Ident "mkName"))) (Lit (String "a")))) (BDecls [])]) (InfixApp (App (Var (UnQual (Ident "runQ"))) (BracketExp (TypeBracket (TyForall (Just [UnkindedVar (Ident "m")]) [] (TyApp (TyApp (TyCon (UnQual (Ident "PageFunction"))) (TyVar (Ident "m"))) (TySplice (ParenSplice (App (Var (UnQual (Ident "conT"))) (Paren (App (Var (UnQual (Ident "mkName"))) (Lit (String "a")))))))))))) (QVarOp (UnQual (Symbol ">>="))) (Var (UnQual (Ident "print")))))) (BDecls [])]

